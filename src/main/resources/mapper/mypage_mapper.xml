<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC   "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.eat.mypage.MypageDAO">

	<!-- 회원정보 불러오기 -->
	<select id="member_list" resultType="com.eat.dto.MypageDTO">
		SELECT
			user_id
			,pass
			,nickname
			,email
			,bio
			,location
			,img_idx
		FROM member m WHERE user_id = #{user_id}
	</select>
	
	<!-- 태그 불러오기 -->
	<select id="member_tag_list" resultType="com.eat.dto.TagPreferDTO">
		SELECT 
			user_id, pass, nickname, email, bio, location, img_idx, class AS isClass
		 FROM tag_prefer tp 
			WHERE user_id = #{user_id}
	</select>

	<!-- 회원정보 수정 -->
	<update id="member_update"
		parameterType="com.eat.dto.MypageDTO">
		UPDATE member SET email = #{email},
		nickname = #{nickname},
		bio = #{bio},
		location = #{location},
		withdraw = #{withdraw}
		WHERE user_id = #{user_id}
	</update>

	<!-- 회원 탈퇴 -->
	<update id="member_secession">
		update member set withdraw = true
			where user_id = #{user_id}
	</update>
	
	<!-- 비밀번호 확인 -->
	<select id="member_pass" parameterType="string" resultType="string">
    SELECT pass FROM member WHERE user_id = #{user_id}
</select>
	
	
	<!-- 회원 정보 수정 - 태그 삭제 -->
	<delete id="deletMemberTags">
		DELETE FROM
		tag_prefer where user_id = #{param1}
	</delete>

	<!-- 회원 정보 수정 - 태그 추가 -->
	<insert id="addMemberTags" parameterType="map">
		INSERT INTO tag_prefer (user_id, idx)
		VALUES
		<foreach collection="tagList" item="tag" separator=",">
			(#{user_id}, #{tag})
		</foreach>
	</insert>
	
	<!-- 마이페이지 태그 추가 (사용 중) -->
	<insert id="member_tag_prefer_insert" parameterType="com.eat.dto.TagPreferDTO">
		INSERT INTO tag_prefer (idx, class, user_id) VALUES
		<foreach collection="tags" item="tag" separator=",">
			 (#{tag.idx}, #{tag.isClass}, #{tag.user_id})
		</foreach>
	</insert>
	
	<!-- 마이페이지 태그 삭제 (사용 중) -->
	<delete id="member_tag_prefer_delete">
		DELETE FROM
		tag_prefer where user_id = #{param1}
	</delete>
	
	<!-- 프로필 변경  -->
	<update id="profile_update" parameterType="com.eat.dto.MypageDTO">
	update member
	SET img_idx = #{img_idx}
	where user_id = #{user_id}
	</update>
	
	<!-- 프로필 삭제 -->
	<update id="profile_del">
		UPDATE member SET img_idx = NULL WHERE user_id = #{param1}
	</update>
	
	<!-- 프로필 db조회 -->
	<!-- <select id="photo_del" resultType="map">
	Select * from photo where img_idx = #{param1}
	</select> -->
	
	<!-- 프로필 정보 가져오기 -->
	<select id="imgInfo" resultType="map">
	SELECT new_filename FROM photo
		WHERE img_idx = #{img_idx}
	</select>
	
	<insert id="saveProfileImg" parameterType="com.eat.dto.PhotoDTO" 
	useGeneratedKeys="true" keyProperty="img_idx">
  INSERT INTO photo (new_filename, class)
  VALUES (#{new_filename},#{photo_class})
</insert>

	<!-- 내가 쓴 게시글 모아보기 -->
	<select id="my_course_list" resultType="com.eat.dto.CourseDTO">
		SELECT * FROM post 
		WHERE user_id = #{user_id}
		ORDER BY post_idx DESC
		LIMIT 10 OFFSET #{offset}
	</select>
	
	<select id="pages" resultType="int">
		SELECT CEIL(COUNT(post_idx)/10) AS pages
		FROM post WHERE user_id = #{user_id}
	</select>
	
	<select id="liked_pages" resultType="int">
		SELECT CEIL(COUNT(liked)/10) AS pages
		FROM liked WHERE user_id = #{user_id}
	</select>
	
	<!-- 내가 좋아요 한 글 모아보기 -->
	<select id="like_course_list" resultType="com.eat.dto.CourseDTO">
		SELECT
		p1.post_idx,
		p1.subject,
		p1.user_id,
		p1.reg_date,
		p1.b_hit,
		(SELECT COUNT(*)
		    FROM liked l2
		    WHERE l2.post_idx = p1.post_idx) 
		AS total_like_count
		FROM post p1 WHERE p1.post_idx IN
		(SELECT post_idx 
		FROM liked WHERE user_id = #{user_id})
		ORDER BY post_idx DESC
		LIMIT 10 OFFSET #{offset}
	</select>
	
	<!-- 이메일 중복 체크 -->
	<select id="overlayEmail" resultType="int">
		SELECT COUNT(email) FROM
		member
		WHERE email = #{param1}
	</select>
	
	<!-- 마이페이지 비밀번호 변경 (기존 비밀번호, 새 비밀번호) -->
	<update id="mypage_updatePassword">
		UPDATE member
    		SET pass = #{new_pass}
    		WHERE user_id = #{user_id}
      	AND pass = #{existing_pass}
	</update>
	
	<!-- 유저가 선택한 태그 이름 조회 (아래 세 개) -->
	<select id="member_tag_idx" resultType="com.eat.dto.TagPreferDTO">
		SELECT idx, class AS isClass, user_id FROM tag_prefer tp 
			WHERE user_id = #{user_id}
	</select>
	
	<!-- <select id="member_tag_name" resultType="string">
		<choose>
    <when test="isClass == '지역'">
      SELECT tag_area_name FROM tag_area WHERE area_tag_idx IN
      <foreach collection="tagIdxList" item="idx" open="(" separator="," close=")">
        #{idx}
      </foreach>
    </when>
    <otherwise>
      SELECT tag_name FROM tag WHERE tag_idx IN
      <foreach collection="tagIdxList" item="idx" open="(" separator="," close=")">
        #{idx}
      </foreach>
    </otherwise>
  </choose>
	</select> -->
	
	<select id="getTagNamesFromTagArea" resultType="string" parameterType="list">
	    SELECT tag_name FROM tag_area
	    WHERE area_tag_idx IN
	    <foreach collection="list" item="idx" open="(" separator="," close=")">
	        #{idx}
	    </foreach>
	</select>
	
	<select id="getTagNamesFromTag" resultType="string" parameterType="list">
	    SELECT tag_name FROM tag
	    WHERE tag_idx IN
	    <foreach collection="list" item="idx" open="(" separator="," close=")">
	        #{idx}
	    </foreach>
	</select>

	
	
</mapper>













