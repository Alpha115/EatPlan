<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC   "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.eat.regist.RegistDAO">

<!-- 코스 작성 몸통 -->
<insert id="regist_write" parameterType="com.eat.dto.CourseDTO"
	useGeneratedKeys="true" keyColumn="post_idx" keyProperty="post_idx">
	INSERT INTO post (user_id, subject, post_cmt, public, tmp)
	VALUES (#{user_id}, #{subject}, #{post_cmt}, #{isPublic}, #{tmp})
</insert>

<!-- 코스 작성 타임라인 -->
<insert id="regist_time" parameterType="com.eat.dto.TimelineDTO">
	INSERT INTO timeline (post_idx, start, end)
	VALUES (#{param2},#{param1.start},#{param1.end})
</insert>

<!-- 코스 작성 세부일정-식당 -->
<insert id="regist_detail_resta" parameterType="com.eat.dto.DetailRestaDTO"
	useGeneratedKeys="true" keyColumn="detail_idx" keyProperty="detail_idx">
	INSERT INTO detail_restaurant (post_idx, resta_idx, comment, start)
	VALUES (#{post_idx}, #{resta_idx}, #{comment}, #{start})
</insert>

<!-- 코스 작성 세부일정-코멘트만 -->
<insert id="regist_detail_cmt" parameterType="com.eat.dto.DetailCmtDTO"
	useGeneratedKeys="true" keyColumn="detail_idx" keyProperty="detail_idx">
	INSERT INTO detail_comment (post_idx, comment, start)
	VALUES (#{post_idx}, #{comment}, #{start})
</insert>

<!-- 코스 작성 코스태그 -->
<insert id="regist_tags" parameterType="com.eat.dto.CourseTagDTO">
	INSERT INTO tag_course (post_idx, idx, class)
	VALUES (#{post_idx}, #{idx}, #{isClass})
</insert>

<!-- 코스 작성 임시저장 리스트 -->
<select id="regist_tmp_list" resultType="com.eat.dto.CourseDTO">
	SELECT
		post_idx 
		,subject
		,reg_date
	FROM post
	WHERE user_id = #{param1} AND tmp = true
	ORDER BY reg_date DESC
	LIMIT #{param3} OFFSET #{param2}
</select>

<!-- 코스 작성 임시저장 리스트 수-->
<select id="regist_tmp_cnt" resultType="int">
	SELECT count(post_idx) AS cnt
	FROM post
	WHERE user_id = #{param1} AND tmp = true
</select>

<!-- 코스 수정 몸통 -->
<update id="update" parameterType="com.eat.dto.CourseDTO">
	UPDATE post
	SET 
	    subject = #{content.subject},
	    post_cmt = #{content.post_cmt},
	    public = #{content.isPublic}
	WHERE post_idx = #{param2}
</update>

<!-- 코스 수정 타임라인 -->
<update id="update_time" parameterType="com.eat.dto.TimelineDTO">
	UPDATE timeline
	SET 
	    start = #{time.start},
	    end = #{time.end}
	WHERE post_idx = #{param2}
</update>

<!-- 코스 수정 세부일정-식당 새로생성 -->
<insert id="update_detail_resta" parameterType="com.eat.dto.DetailRestaDTO"
	useGeneratedKeys="true" keyColumn="detail_idx" keyProperty="d_resta.detail_idx">
	INSERT INTO detail_restaurant (post_idx, resta_idx, comment, start)
	VALUES (#{param2}, #{d_resta.resta_idx}, #{d_resta.comment}, #{d_resta.start})
</insert>

<!-- 코스 수정 세부일정-식당 삭제 -->
<delete id="delete_detail_resta">
	DELETE FROM detail_restaurant WHERE detail_idx = #{param1}
</delete>

<!-- 코스 수정 세부일정-코멘트 새로생성 -->
<insert id="update_detail_cmt" parameterType="com.eat.dto.DetailCmtDTO"
	useGeneratedKeys="true" keyColumn="detail_idx" keyProperty="d_cmt.detail_idx">
	INSERT INTO detail_comment (post_idx, comment, start)
	VALUES (#{param2}, #{d_cmt.comment}, #{d_cmt.start})
</insert>

<!-- 코스 수정 세부일정-코멘트 삭제 -->
<delete id="delete_detail_cmt">
	DELETE FROM detail_cmt WHERE detail_idx = #{param1}
</delete>

<!-- 코스 수정 코스태그 새로생성 -->
<insert id="update_tags" parameterType="com.eat.dto.CourseTagDTO">
	INSERT INTO tag_course (post_idx, idx, class)
	VALUES (#{param2}, #{t.idx}, #{t.isClass})
</insert>

<!-- 코스 수정 코스태그 삭제 -->
<delete id="delete_tags">
	DELETE FROM tag_course 
	WHERE post_idx = #{param2} AND idx = #{t.idx} AND class = #{t.isClass}
</delete>

<!-- 코스 삭제 -->
<delete id="delete">
    DELETE FROM post
    WHERE post_idx IN
    <foreach item="del_idx" collection="list" open="(" separator="," close=")">
        #{del_idx.post_idx}
    </foreach>
</delete>

<!-- 페이지 -->
<select id="pages" resultType="int">
	SELECT CEIL(COUNT(post_idx)/#{param1}) AS pages FROM post WHERE tmp = true
</select>

</mapper>